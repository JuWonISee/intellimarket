<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.intellimarket.store.dao.SettlementDAO">

	<resultMap type="Settlement" id="joinMap">
	
		<id column="settlement_id" property="settlementId"/>
		
		<result column="requested_amount" property="requestedAmount"/>
		<result column="net_amount" property="netAmount"/>
		<result column="settlement_status" property="settlementStatus"/>
		<result column="settlement_requested_at" property="settlementRequestedAt"/>
		<result column="settlement_completed_at" property="settlementCompletedAt"/>
		<result column="created_at" property="createdAt"/>
		<result column="updated_at" property="updatedAt"/>
		
		<association 
			column="store_info_id" 
			property="storeInfo" 
			javaType="StoreInfo"
			select="com.intellimarket.store.dao.StoreInfoDAO.selectById"
		/>
		
	</resultMap>
	
	<select id="selectAll" resultMap="joinMap">
		select * from settlement 
	</select>
	
	<select id="selectById" parameterType="int" resultMap="joinMap">
		select * from settlement where settlement_id = #{settlementId}
	</select>
	
	<select id="selectByStoreInfoId" parameterType="int" resultMap="joinMap">
		select * from settlement where store_info_id = #{storeInfoId}
	</select>
	
	<select id="selectByStatusAndStoreInfoId" parameterType="map" resultMap="joinMap">
		select * from settlement 
		where store_info_id = #{storeInfoId} 
		and settlement_status = #{settlementStatus} 
	</select>

	<select id="selectByStatus" parameterType="String" resultMap="joinMap">
		select * from settlement 
		where  settlement_status = #{settlementStatus} 
	</select>
	
	<update id="updateStatus" parameterType="Settlement">
		update settlement
		set settlement_status = #{settlementStatus}
		where settlement_id = #{settlementId}
	</update>
	
    <!-- 스토어 및 상태별 정산 건수 -->
    <select id="countByStatusAndId" resultType="int">
        SELECT COUNT(*)
        FROM settlement
        WHERE settlement_status = #{settlementStatus}
          AND store_info_id = #{storeInfoId}
          AND DATE_FORMAT(created_at, '%Y-%m') = #{yearMonth}
    </select>

    <!-- 스토어 및 상태별 정산 금액 합계 -->
    <select id="sumAmountByStatusAndId" resultType="int">
        SELECT IFNULL(SUM(requested_amount), 0)
        FROM settlement
        WHERE settlement_status = #{settlementStatus}
          AND store_info_id = #{storeInfoId}
          AND DATE_FORMAT(created_at, '%Y-%m') = #{yearMonth}
    </select>
    
    <!-- 상태별 정산 건수 -->
    <select id="countByStatus" resultType="int">
        SELECT COUNT(*)
        FROM settlement
        WHERE settlement_status = #{settlementStatus}
          AND DATE_FORMAT(created_at, '%Y-%m') = #{yearMonth}
    </select>
    
    <!-- 상태별 정산 금액 합계 -->
    <select id="sumAmountByStatus" resultType="int">
        SELECT IFNULL(SUM(requested_amount), 0)
        FROM settlement
        WHERE settlement_status = #{settlementStatus}
          AND DATE_FORMAT(created_at, '%Y-%m') = #{yearMonth}
    </select>
    
    <!-- status가 READY인 건 일괄 REQUESTED 요청 (단, yearMonth / storeInfoId 입력 필요) -->
    <update id="updateStatusToRequested">
	  UPDATE settlement
	  SET 
	    settlement_status = 'REQUESTED',
	    settlement_requested_at = NOW()
	  WHERE store_info_id = #{storeInfoId}
	    AND settlement_status = 'READY'
	    AND DATE_FORMAT(created_at, '%Y-%m') = #{yearMonth}
	</update>
	
	<!-- 유저가 구매확정 누를 때 , 정산 Record 신규 insert -->
	<insert id="insert" parameterType="Settlement">
		insert into settlement(store_info_id,requested_amount) 
			values(#{storeInfo.storeInfoId},#{requestedAmount});
	</insert>
	
</mapper>