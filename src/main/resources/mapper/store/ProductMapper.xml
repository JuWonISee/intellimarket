<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.intellimarket.store.dao.ProductDAO">

	<resultMap type="Product" id="joinMap">
		<id column="product_id"				property="productId"/>
		
		<result column="product_name" 		property="productName"/>
		<result column="brand_name" 		property="brandName"/>
		<result column="price" 				property="price"/>
		<result column="discount" 			property="discount"/>
		<result column="product_stock" 		property="productStock"/>
		<result column="introduce" 			property="introduce"/>
		<result column="product_detail" 	property="productDetail"/>
		<result column="model_code" 		property="modelCode"/>
		<result column="origin" 			property="origin"/>
		<result column="sales_count" 		property="salesCount"/>
		<result column="status" 			property="status"/>
		
		<result column="created_date" 		property="createdDate"/>
		<result column="updated_date" 		property="updatedDate"/>
		
		<association 
			column = "sub_category_id" 
			property = "subCategory" 
			javaType = "SubCategory"
			select = "com.intellimarket.store.dao.SubCategoryDAO.select"
		/> 
		
<!-- 		<association 
			column = "market_event_id" 
			property = "marketEvent" 
			javaType = "MarketEvent"
			select = "com.intellimarket.store.dao.MarketEventDAO.select"
		/> -->
		
		<association 
			column = "seller_id" 
			property = "seller" 
			javaType = "Seller"
			select = "com.intellimarket.store.dao.SellerDAO.selectById"
		/>
		
		<collection 
			column = "product_id" 
			property = "imgList"
			javaType = "java.util.List"
			ofType = "ProductImage"
			select = "com.intellimarket.store.dao.ProductImageDAO.selectById"
		/>
		
	</resultMap>
	
	<!-- 전체 목록 조회 -->
	<select id="selectAll" resultMap="joinMap">
		select *from products
	</select>
	
	
	<!-- 판매자별 상품 목록 조회 -->
	<select id="selectById" parameterType = "int" resultMap="joinMap">
		select *from products 
		where seller_id = #{sellerId}
	</select>
	
	<!-- 베스트 상품 목록 조회 -->
	<select id="selectBestByCount" parameterType="int" resultMap="joinMap">
		SELECT  * FROM products
		ORDER BY sales_count DESC
		LIMIT #{count}
	</select>
	
	<!-- 상품 목록 최신 등록순 조회 -->
	<select id="selectRecentByCount" parameterType="int" resultMap="joinMap">
		SELECT * FROM products 
		ORDER BY created_date DESC
		LIMIT #{count}
	</select>
	
	<!-- 추천 목록 최신 등록순 조회 -->
	<select id="selectRecommandByCount" parameterType="int" resultMap="joinMap">
		SELECT * FROM products 
		WHERE is_recommand = '추천'
		ORDER BY created_date DESC
		LIMIT #{count}
	</select>
	
	<!-- 상품 단 건 조회 -->
	<select id="select" parameterType="int" resultMap="joinMap">
		select *from products
		where product_id = #{productId}
	</select>
	
	<!-- 상품 등록 -->
	<insert id="insert" parameterType="Product">
		insert into products(
			product_name, brand_name, price, discount, product_stock, introduce, product_detail, model_code, origin, sub_category_id, seller_id
		)
		values (
			#{productName}, #{brandName}, #{price}, #{discount}, #{productStock}, #{introduce}, #{productDetail}, #{modelCode}, #{origin}, #{subCategory.subCategoryId}, #{seller.sellerId}
		)
		<selectKey keyColumn="product_id" keyProperty="productId" resultType="int" order="AFTER">
			select last_insert_id() as product_id
		</selectKey>
	</insert>
	
	<!-- 상품 정보 수정 -->
	<update id="updateProduct" parameterType="Product">
		update products
		set
			product_name = #{productName}
			, brand_name = #{brandName}
			, price = #{price}
			, discount = #{discount}
			, product_stock = #{productStock}
			, introduce = #{introduce}
			, product_detail = #{productDetail}
			, model_code = #{modelCode}
			, origin = #{origin}
			, sub_category_id = #{subCategory.subCategoryId}
			, updated_date = NOW()
		where product_id = #{productId}
	</update>
	
	<!-- 상품 상태 변경 -->
	<update id="updateStatus" parameterType="Product">
		update products
		set status = #{status}
		where product_id = #{productId}
	</update>
	
	<!-- 상품 삭제 -->
	<delete id="delete" parameterType="int">
		delete from products
		where product_id = #{productId}
	</delete>
	
	<!-- 결제완료 시  , sales_count 1 증가 -->
	<update id="updateSalesCount" parameterType="int">
		UPDATE products
		SET sales_count = sales_count + 1
		WHERE product_id = #{productId};
	</update>
	
	<!-- 결제 완료 시 , 재고수량 1 감소 -->
	<update id="updateProductStock" parameterType="int">
		UPDATE products
		SET product_stock = product_stock - 1
		WHERE product_id = #{productId};
	</update>
	
</mapper>

